Spring Annotation
-- 자바 1.5부터 지원.
-- 스프링은 Annotation을 이용하여 빈과 관련된 정보를 설정할 수 있다.

Spring Framework에서 Annotation을 사용하려면 다음과 같은 설정들을 필요로 한다.
1.CommonAnnotationBeanPostProcessor 클래스 파일에 bean 객체로 등록하여 annotation을 적음
	<bean class="org.springframework.beans.factory.annotation.CommonAnnotationBeanPostProcessor"/>
2.<context:annotation-config>태그를 이용
	@Autowired, @Required, @Resource, @PostConstructor, @PreDestroy 등의 annotation을 자동 처리
3.<context:component-scan> 태그를 이용
	@Component, @Controller, @Service, @Repository 등의 annotation을 자동 처리
4.<mvc:annotation-driven>
	@RequestMapping, @vaild 등의 spring mvc component들을 자동 처리.
	
- 4개의 stereotype annotation(component-scan에 의해 자동으로 등록)
@Component: 개발자가 만든 class를 bean으로 등록
@Controller: Spring MVC에서 컨트롤러로 인식
@Service: service class에 사용. 비즈니스 로직을 수헹하는 class라는 것을 나타내는 용도.(biz)
@Repository: Dao Class에 사용. Exception을 DataAccessException으로 변환


1. @Component
클래스에 선언, 해당 클래스를 자동으로 bean으로 등록한다.
bean의 이름은 해당 클래스명이 사용(단, 첫글자는 소문자) myFood

2. @Autowired
Spring에서 의존관계를 자동으로 설정할 때 사용.
필드, 메소드, 생성자 세 곳에 적용 가능. 타입을 이용한 프로퍼티 자동 설정 기능을 제공.
같은 타입의 bean이 2개 이상 존재하게 되면 예외 발생,
이때 @Qualifier를 사용하여 동일한 타입의 빈 중에 특정 빈(이름으로)을 사용하도록 하여 문제 해결 가능.
[ex]
@Autowired
@Qualifier("test")
private Test test; //byType->byName

3. @Qualifier
@Autowired 어노테이션이 타입 기반이기 때문에 2개 이상의 동일 타입 bean이 존재할 시
특정 빈을 사용하도록 선언.
@Qualifier("beamName")

4. @Required
필수 프로퍼티임을 명시. 프로퍼티 설정 메소드(setter)에 붙이면 된다.
setter에 적용하여 bean 생성 시 필수 프로퍼티로 설정.

5. @Repository
dao에 사용.

6. @Service
biz에 사용(Service로 등록)

7. @Resource
어플리케이션에서 필요로 하는 자원을 자동 연결할 때 사용(@Autowired와 비슷하게 bean을 주입)
name 속성에 자동으로 연결될 빈 객체의 이름을 입력.
[ex]
@Resource(name="testBiz")


























 